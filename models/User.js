// backend/models/User.js

const mongoose = require('mongoose');

const UserSchema = new mongoose.Schema({
    userId: {
        type: String,
        required: true,
        unique: true
    },
    username: {
        type: String,
        required: true,
        unique: true
    },
    passwordHash: {
        type: String,
        required: true
    },
    balance: {
        type: Number,
        required: true,
        default: 1000.00
    },

    // O saldo agora √© dividido em dois
    balance: { type: Number, default: 0.00 }, // Saldo Real (sac√°vel)
    bonusBalance: { type: Number, default: 0.00 }, // Saldo de B√≥nus (n√£o sac√°vel)
    
    affiliateId: {
        type: String,
        default: null
    },
    commissionBalance: {
        type: Number,
        required: true,
        default: 0.00
    },
    hasGeneratedCPA: {
        type: Boolean,
        default: false
    },
    // NOVIDADE CR√çTICA: Campo para Pap√©is (Roles)
    role: {
        type: String,
        enum: ['affiliate', 'influencer', 'admin'], // Apenas estes valores s√£o permitidos
        default: 'affiliate' // Novos usu√°rios ser√£o 'affiliate' por padr√£o
    },
    lastLogin: { type: Date, default: Date.now },

     // NOVOS CAMPOS PARA CONTROLO DE B√ìNUS E ROLLOVER
    wageringTarget: { type: Number, default: 0 }, // Meta de apostas para cumprir
    wageringProgress: { type: Number, default: 0 }, // Quanto j√° foi apostado

    // NOVOS CAMPOS PARA O PERFIL DO UTILIZADOR
    email: { type: String, default: '' },
    isEmailVerified: { type: Boolean, default: false },
    avatar: { type: String, default: 'üë§' } // Avatar padr√£o

}, { timestamps: true });

module.exports = mongoose.model('User', UserSchema);